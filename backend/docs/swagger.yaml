definitions:
  friend.BlockUserInput:
    properties:
      requestor:
        type: string
      target:
        type: string
    type: object
  friend.BlockUserOutput:
    properties:
      msgs:
        items:
          type: string
        type: array
      success:
        type: boolean
    type: object
  friend.GetCommonFriendsInput:
    properties:
      friends:
        items:
          type: string
        type: array
    type: object
  friend.GetCommonFriendsOutput:
    properties:
      count:
        type: integer
      friends:
        items:
          type: string
        type: array
      msgs:
        items:
          type: string
        type: array
      success:
        type: boolean
    type: object
  friend.GetFriendsInput:
    properties:
      email:
        type: string
    type: object
  friend.GetFriendsOutput:
    properties:
      count:
        type: integer
      friends:
        items:
          type: string
        type: array
      msgs:
        items:
          type: string
        type: array
      success:
        type: boolean
    type: object
  friend.GetRecipientsInput:
    properties:
      sender:
        type: string
      text:
        type: string
    type: object
  friend.GetRecipientsOutput:
    properties:
      msgs:
        items:
          type: string
        type: array
      recipients:
        items:
          type: string
        type: array
      success:
        type: boolean
    type: object
  friend.MakeFriendInput:
    properties:
      friends:
        items:
          type: string
        type: array
    type: object
  friend.MakeFriendOutput:
    properties:
      msgs:
        items:
          type: string
        type: array
      success:
        type: boolean
    type: object
  friend.SubscribeUserInput:
    properties:
      requestor:
        type: string
      target:
        type: string
    type: object
  friend.SubscribeUserOutput:
    properties:
      msgs:
        items:
          type: string
        type: array
      success:
        type: boolean
    type: object
  user.RegisterUserInput:
    properties:
      username:
        type: string
    type: object
  user.RegisterUserOutput:
    properties:
      data:
        properties:
          id:
            type: integer
          username:
            type: string
        type: object
      msgs:
        items:
          type: string
        type: array
      success:
        type: boolean
    type: object
info:
  contact: {}
  license: {}
paths:
  /friend/block-user:
    post:
      consumes:
      - application/json
      description: As a user, I need an API to block updates from an email address.
      parameters:
      - description: Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/friend.BlockUserInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/friend.BlockUserOutput'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/friend.BlockUserOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/friend.BlockUserOutput'
      summary: Block an User
      tags:
      - Friend
  /friend/get-common-friends:
    post:
      consumes:
      - application/json
      description: As a user, I need an API to retrieve the common friends list between
        two email addresses.
      parameters:
      - description: Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/friend.GetCommonFriendsInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/friend.GetCommonFriendsOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/friend.GetCommonFriendsOutput'
      summary: Get Common Friends
      tags:
      - Friend
  /friend/get-friends:
    post:
      consumes:
      - application/json
      description: As a user, I need an API to retrieve the friends list for an email
        address.
      parameters:
      - description: Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/friend.GetFriendsInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/friend.GetFriendsOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/friend.GetFriendsOutput'
      summary: Get Friends
      tags:
      - Friend
  /friend/get-recipients:
    post:
      consumes:
      - application/json
      description: As a user, I need an API to retrieve all email addresses that can
        receive updates from an email address.
      parameters:
      - description: Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/friend.GetRecipientsInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/friend.GetRecipientsOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/friend.GetRecipientsOutput'
      summary: Get Recipients
      tags:
      - Friend
  /friend/make-friend:
    post:
      consumes:
      - application/json
      description: As a user, I need an API to create a friend connection between
        two email addresses
      parameters:
      - description: Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/friend.MakeFriendInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/friend.MakeFriendOutput'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/friend.MakeFriendOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/friend.MakeFriendOutput'
      summary: Make Friend
      tags:
      - Friend
  /friend/subscribe-user:
    post:
      consumes:
      - application/json
      description: As a user, I need an API to subscribe to updates from an email
        address.
      parameters:
      - description: Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/friend.SubscribeUserInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/friend.SubscribeUserOutput'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/friend.SubscribeUserOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/friend.SubscribeUserOutput'
      summary: Subscribe an User
      tags:
      - Friend
  /user/register-user:
    post:
      consumes:
      - application/json
      description: As a user, I need an API to create an user by email address
      parameters:
      - description: Email
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/user.RegisterUserInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/user.RegisterUserOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/user.RegisterUserOutput'
      summary: Register an User
      tags:
      - User
swagger: "2.0"
